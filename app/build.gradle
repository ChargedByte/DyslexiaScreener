plugins {
    id 'com.android.application'
}

android {
    namespace 'fi.metropolia.capslock.dyslexiascreener'
    compileSdk 33

    defaultConfig {
        applicationId "fi.metropolia.capslock.dyslexiascreener"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

android.applicationVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        title = "${rootProject.name} API Documentation (${project.android.defaultConfig.versionName})"
        group = "Documentation"
        description "Generates Javadoc for $variant.name."

        source = variant.sourceSets.collect { it.java.sourceFiles }.inject { m, i -> m + i }

        doFirst {
            classpath = project.files(variant.javaCompileProvider.get().classpath.files,
                project.android.getBootClasspath())
        }

        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }

        exclude "**/R"
        exclude "**/R.**"
        exclude "**/R\$**"
        exclude "**/BuildConfig*"

        options {
            encoding = "utf-8"
            docEncoding = "utf-8"
            windowTitle = "${rootProject.name} API Documentation (${project.android.defaultConfig.versionName})"
            memberLevel = JavadocMemberLevel.PRIVATE
            linkSource = false
            author = true
            version = true
            use = true

            links("https://developer.android.com/reference")
            linksOffline("https://developer.android.com/reference",
                "https://d.android.com/reference/androidx")
        }

        destinationDir = new File(getBuildDir(), "outputs/javadoc/${variant.dirName}")

        doLast {
            println("Javadoc generated at ${destinationDir}")
        }
    }
}

dependencies {
    // Android Defaults
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Android Room
    implementation 'androidx.room:room-runtime:2.4.3'
    annotationProcessor 'androidx.room:room-compiler:2.4.3'
    testImplementation 'androidx.room:room-testing:2.4.3'

    // Android Preferences
    implementation 'androidx.preference:preference:1.2.0'

    // Android Fragments
    implementation 'androidx.fragment:fragment:1.5.3'
}

configurations {
    all {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
    }
}
